function Edge(e,t,n,r,o){var d={};d.id=n,d.nodeStart=e,d.nodeEnd=t,d.weight=null!=r?r:1,d.label=o,this.getId=function(){return d.id},this.getNodeStart=function(){return d.nodeStart},this.getNodeEnd=function(){return d.nodeEnd},this.getWeight=function(){return d.weight},this.getLabel=function(){return d.label},this.setWeight=function(e){d.weight=e}}function Node(e,t){var n={};n.id=t,n.content=e,this.getId=function(){return n.id},this.getContent=function(){return n.content},this.setContent=function(e){n.content=e}}function equal(e,t){return e=e.toString(),t=t.toString(),0==e.localeCompare(t)}module.exports=function(){var e={};e.nodes=new Array,e.edges=new Array,this.isNode=function(t){var n=!1;for(var r in e.nodes)equal(e.nodes[r].getId(),t)&&(n=!0);return n},this.isEdge=function(t){var n=!1;for(var r in e.edges)equal(e.edges[r].getId(),t)&&(n=!0);return n},this.addNode=function(t,n){if(null!=t&&null!=n)if(this.isNode(n))console.error("Error : The node's id is already exists");else{var r=new Node(t,n);e.nodes.push(r)}else console.error("Error : The node is not correctly defined")},this.addEdge=function(t,n,r,o,d){if(null!=t&&null!=n&&null!=r)if(this.isNode(t)&&this.isNode(n))if(this.isEdge(r))console.error("Error : The edge's id is already exists");else{var s=new Edge(this.getNode(t),this.getNode(n),r,o,d);e.edges.push(s)}else console.error("Error : The edge is not create because one of nodes doesn't exist.");else console.error("Error : The edge is not correctly defined.")},this.removeNode=function(t){var n=new Array;for(var r in e.nodes)equal(e.nodes[r].getId(),t)&&e.nodes.splice(r,1);for(var o in e.edges)(equal(e.edges[o].getNodeStart().getId(),t)||equal(e.edges[o].getNodeEnd().getId(),t))&&n.push(o);for(var d in n)n[d]-=d;for(var d in n)e.edges.splice(n[d],1);n=[]},this.removeEdge=function(t){for(var n in e.edges)equal(e.edges[n].getId(),t)&&e.edges.splice(n,1)},this.getPredecessors=function(t){var n=new Array;for(var r in e.edges)equal(e.edges[r].getNodeEnd().getId(),t)&&n.push(e.edges[r].getNodeStart());return n},this.getSuccessors=function(t){var n=new Array;for(var r in e.edges)equal(e.edges[r].getNodeStart().getId(),t)&&n.push(e.edges[r].getNodeEnd());return n},this.getNode=function(t){var n=new Node;for(var r in e.nodes)equal(e.nodes[r].getId(),t)&&(n=e.nodes[r]);return n},this.getNodes=function(){return e.nodes},this.getEdge=function(t){var n=new Edge;for(var r in e.edges)equal(e.edges[r].getId(),t)&&(n=e.edges[r]);return n},this.getEdges=function(){return e.edges}};